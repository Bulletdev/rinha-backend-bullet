version: '3.7'

services:
  api01: &api
    image: rinha-backend-bullet:latest
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    hostname: api01
    environment:
      - DB_HOSTNAME=db
      - DB_USER=postgres
      - DB_PASSWORD=P0rdemacia
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "200MB"
    restart: on-failure

  api02:
    <<: *api
    hostname: api02
    ports:
      - "8082:8080"
    restart: on-failure

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    networks:
      - rinha-network
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "20MB"

  db:
    image: postgres:latest
    hostname: db
    environment:
      - POSTGRES_PASSWORD=P0rdemacia
      - POSTGRES_USER=postgres
      - POSTGRES_DB=rinha
    ports:
      - "5433:5432"
    volumes:
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c checkpoint_timeout=600 -c max_connections=200 -c shared_buffers=256MB -c synchronous_commit=off -c fsync=off -c work_mem=12MB -c maintenance_work_mem=128MB -c random_page_cost=1.1 -c effective_cache_size=300MB -c max_parallel_workers_per_gather=4 -c max_parallel_workers=8 -c max_worker_processes=8
    networks:
      - rinha-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "330MB"

networks:
  rinha-network:
    driver: bridge